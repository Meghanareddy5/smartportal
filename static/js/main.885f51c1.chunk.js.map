{"version":3,"sources":["components/Table1.js","components/Dashboard.js","components/Navigation.js","components/LoadingComponent.js","components/ProductComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","components/Login.js","redux/users.js","redux/shows.js","App.js","redux/configureStore.js","serviceWorker.js","index.js","logo.svg"],"names":["Table1","colFormatter","cell","row","react_default","a","createElement","es","to","concat","lib","data","this","props","width","isKey","dataField","dataFormat","Component","id","name","value","Dashboard","className","components_Table1","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleNav","bind","assertThisInitialized","state","isNavOpen","setState","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","src","height","alt","Collapse","isOpen","navbar","Nav","NavItem","username","Jumbotron","Loading","Renderproducts","_ref","shows","map","show","key","prodId","prodname","Episode","assigned","status","ProductDetails","showLoading","LoadingComponent_Loading","Breadcrumb","BreadcrumbItem","active","ProductsLoading","type","getProducts","products","payload","Main","console","log","fetchProducts","Navigation","exact","path","component","components_Dashboard","md","match","ProductComponent","isLoading","filter","withRouter","connect","users","dispatch","fetch","baseUrl","then","response","json","Login","handleChange","event","defineProperty","target","redirectToReferrer","password","handleSubmit","length","MainComponent","Form","onSubmit","Row","Label","htmlFor","Col","placeholder","onChange","size","offset","Button","color","disabled","validateForm","Users","arguments","undefined","errMess","action","objectSpread","Shows","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","react_redux_es","components_Login","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.885f51c1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {BootstrapTable, \r\n       TableHeaderColumn} from 'react-bootstrap-table';\r\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n \r\n\r\nclass Table1 extends Component {\r\n\r\n  colFormatter = (cell, row) => {\r\n   if(cell==\"Internal Users\" || cell==\"External Users\" || cell==\"Requests\")\r\n   {\r\nreturn(\r\n{cell}\r\n);\r\n   }\r\n   else\r\n    return (\r\n      <Link to={`/products/${cell}`}>\r\n        {cell}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n \r\n         <BootstrapTable   data={this.props.data}>\r\n          <TableHeaderColumn width=\"300\" isKey dataField='id' dataFormat={ this.colFormatter }>>\r\n            Requests\r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn width=\"200\" dataField='name' dataFormat={ this.colFormatter }>>\r\n           <span>Internal Users</span> \r\n          </TableHeaderColumn>\r\n          <TableHeaderColumn width=\"200\" dataField='value' dataFormat={ this.colFormatter }>>\r\n          <span>External Users</span> \r\n          </TableHeaderColumn>\r\n    </BootstrapTable>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Table1;","import React, { Component } from 'react';\r\nimport Table1 from './Table1';\r\n \r\nvar data = [\r\n  {id: 'Shows', name: '5', value: '4'},\r\n  {id: 'Payment Requests', name: '4', value: '5'},\r\n  {id: 'General Requests', name: '5', value: '4'}\r\n];\r\n \r\n \r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <p className=\"Table-header\">Action Item for users</p>\r\n        <Table1 data={data}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;","import React, {Component} from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Modal, ModalHeader, ModalBody, Collapse, NavItem, Jumbotron,Button,Form, FormGroup, Label, Input, Col,FormFeedback  } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Dashboard from './Dashboard';\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        \r\n        this.state = {\r\n          isNavOpen: false,\r\n        \r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      render() {\r\n        return(\r\n             <div>\r\n            <Navbar dark expand=\"md\">\r\n            <div className=\"container\">\r\n                <NavbarToggler  />\r\n                <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='images/logo.png' height=\"200\" width=\"200\" alt='Smart Portal' /></NavbarBrand>\r\n                <Collapse isOpen={this.state.isNavOpen}navbar>\r\n                    <Nav navbar>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to='/products'><span className=\"fa fa-info fa-lg\"></span>Products</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\"  to='/general'><span className=\"fa fa-list fa-lg\"></span> General Requests</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to='/payments'><span className=\"fa fa-address-card fa-lg\"></span> Payments</NavLink>\r\n                    </NavItem>\r\n                    </Nav>\r\n                   \r\n                </Collapse>\r\n                <h4>Welcome {this.props.username}</h4>\r\n            </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n            <div className=\"container\">\r\n                <div className=\"row row-header\">\r\n                    <div className=\"col-12\">\r\n                   <h4>Welcome to smart portal for creating shows and processing payments!</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Jumbotron>\r\n             </div>\r\n             \r\n                            //     <Navbar >\r\n            //         <div className=\"container\">\r\n                 \r\n            //             <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='images/logo.png' height=\"300\" width=\"200\" alt='smart portal' /></NavbarBrand>\r\n                        \r\n            //                 <Nav navbar>\r\n            //                 <NavItem>\r\n            //                     <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n            //                 </NavItem>\r\n            //                 <NavItem>\r\n            //                     <NavLink className=\"nav-link\" to='/shows'><span className=\"fa fa-info fa-lg\"></span> Shows</NavLink>\r\n            //                 </NavItem>\r\n            //                 <NavItem>\r\n            //                     <NavLink className=\"nav-link\"  to='/Payments'><span className=\"fa fa-list fa-lg\"></span> Payments</NavLink>\r\n            //                 </NavItem>\r\n            //                 <NavItem>\r\n            //                     <NavLink className=\"nav-link\" to='/General'><span className=\"fa fa-address-card fa-lg\"></span>General Requests</NavLink>\r\n            //                 </NavItem>\r\n            //                 </Nav>\r\n            //                 <h4>Welcome {this.props.username}</h4>\r\n                       \r\n            //         </div>\r\n            //     </Navbar>\r\n            /* <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron> */\r\n                \r\n           \r\n        );\r\n    }\r\n}\r\n    \r\n    export default Header;\r\n","import React from 'react';\r\n\r\nexport const Loading=()=>{\r\n    return(\r\n        <div className='col-12'>\r\n        <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n        <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nconst ProductDetails =(props)   =>{\r\n   \r\n        if(props.showLoading){\r\n            return(\r\n                <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n              </div>\r\n            );\r\n        }\r\nelse{\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n    \r\n                    <BreadcrumbItem><Link to=\"/products\">Products</Link></BreadcrumbItem>\r\n                     <BreadcrumbItem active>{props.shows.id} requests</BreadcrumbItem> \r\n                </Breadcrumb>\r\n                             \r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                           \r\n                    <Renderproducts shows={props.shows}/>\r\n                </div>\r\n               \r\n                \r\n            </div>       \r\n            </div>\r\n        );  \r\n        }\r\n\r\n}\r\n\r\n\r\nfunction Renderproducts({shows}) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12\"> <h4>to show working</h4>\r\n                {shows.map((show) =>{\r\n            return(\r\n               <li key={show.prodId} >\r\n               <p>work</p>\r\n               <p>{show.prodname}</p>\r\n               <p>{show.Episode}</p>\r\n               <p>{show.assigned}</p>\r\n               <p>{show.status}</p>\r\n             \r\n            </li>\r\n            ); \r\n        })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductDetails;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const fetchProducts=()=> (dispatch)=>{\r\n  dispatch(ProductsLoading(true));\r\n  return fetch(baseUrl + 'shows')\r\n        .then(response => response.json())\r\n                  .then(products => dispatch(getProducts(products)));\r\n}\r\n\r\nexport const getusername=(name)=>({\r\n    type:ActionTypes.GET_USER,\r\n    payload:name\r\n})\r\n\r\nexport const ProductsLoading=()=>({\r\n    type:ActionTypes.PRODUCT_LOADING\r\n})\r\n\r\nexport const getProducts=(products)=>({\r\n    type: ActionTypes.GET_PRODUCTS,\r\n    payload:products\r\n})\r\n\r\n","export const GET_PRODUCTS='GET_PRODUCTS';\r\nexport const PRODUCT_LOADING='PRODUCT_LOADING';\r\nexport const GET_USER='GET_USER';\r\nexport const ADD_PRODUCT='ADD_PRODUCT';\r\n","import React, { Component } from 'react';\r\nimport {Switch , Route, Redirect, withRouter} from 'react-router-dom';\r\nimport Header from './Navigation';\r\nimport Products from './ProductComponent';\r\nimport {connect} from 'react-redux';\r\nimport { fetchProducts } from '../redux/ActionCreators';\r\nimport Dashboard from './Dashboard';\r\nimport {BootstrapTable, \r\n  TableHeaderColumn} from 'react-bootstrap-table';\r\nimport '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport '../App.css';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n  users:state.users,\r\n  username:state.username,\r\n  shows:state.shows\r\n    \r\n    }       \r\n  }\r\n  const mapDispatchToProps= dispatch=>({    \r\n    fetchProducts:()=>{dispatch(fetchProducts())}\r\n  });\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n      super(props);\r\n \r\n    }\r\n    componentDidMount(){\r\n      console.log('lets see'+ this.props.username);\r\n        this.props.fetchProducts();\r\n        this.setState({\r\n          username: this.props.username\r\n      });  \r\n    }\r\n    render() {\r\n      const ProductPage =  ({match}) => {\r\n        return(\r\n            <Products  showLoading={this.props.shows.isLoading} shows={this.props.shows.shows.filter((show) => show.assigned == this.props.username)} />\r\n        );\r\n    }\r\nconst HomeMainPage=()=>{\r\n  return(\r\n    <Dashboard />\r\n  )\r\n}\r\n\r\n        const HomePage = () => {\r\n          return(\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-start\">\r\n                    <div className=\"col-12\"> \r\n                    <th md={2}>Show Number</th>\r\n                    <th md={2}>Show Name</th>\r\n                    <th md={2}> Episode</th>\r\n                    <th md={2}>Assigned</th>\r\n                    <th md={2}>Status</th>\r\n                    {this.props.shows.shows.map((show) =>{\r\n                return(       \r\n\r\n                  <tr key={show.prodId} >\r\n                  <td>{show.prodId}</td>\r\n                   <td>{show.prodname}</td>\r\n                   <td>{show.Episode}</td>\r\n                   <td>{show.assigned}</td>\r\n                   <td>{show.status}</td>\r\n                 \r\n                   </tr> \r\n                ); \r\n            })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        }\r\n    return (\r\n        <div className=\"container\">\r\n        <Header username={this.props.username}/> \r\n      \r\n        <Switch>\r\n       <Route exact path=\"/home\" component={HomeMainPage}/>\r\n       <Route path=\"/products\" component={HomePage}/>\r\n       <Route exact path=\"/products/:username\" component={ProductPage}/>\r\n       <Redirect to=\"/home\" />\r\n       </Switch>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import React, { Component } from \"react\";\r\nimport {Row,Form,FormFeedback,FormGroup,Label,Input,Button,Col} from 'reactstrap';\r\nimport Main from './MainComponent';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"Maggie\",\r\n      redirectToReferrer: false,\r\n      password:\"*****\"\r\n \r\n    };\r\n    this.handleSubmit= this.handleSubmit.bind(this);\r\n    this.handleChange= this.handleChange.bind(this);\r\n  }\r\n\r\n//   login = () => {\r\n//          this.setState({\r\n//             redirectToReferrer: true\r\n//         });  \r\n//   }\r\n\r\n  validateForm() {\r\n    return this.state.username.length > 0 ;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.setState({\r\n        redirectToReferrer: true,\r\n        username:\"Maggie\"\r\n    });  \r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirectToReferrer == true) {\r\n        return <Main username={this.state.username}/>\r\n      }\r\n\r\n    return (\r\n     \r\n        <div className=\"row row-content\">\r\n            <div className=\"col-12 col-md-9\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n        <Row className=\"form-group\">\r\n            <Label htmlFor=\"username\" md={8}>User Name</Label>\r\n            <Col md={4}>\r\n            <input \r\n              type=\"text\" id=\"username\" name=\"username\"\r\n              placeholder=\"User Name\"\r\n              value={this.state.username}\r\n              onChange={this.handleChange}\r\n            />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n            <Label htmlFor=\"password\" md={8}>Password</Label>\r\n            <Col md={4}>\r\n            <input \r\n              type=\"text\" id=\"password\" name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n            />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\"  disabled={!this.validateForm()}>\r\n                                   Login\r\n                                    </Button>\r\n                                </Col>\r\n         </Row>   \r\n                                      \r\n      \r\n        </Form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Users = (state = \r\n    { isLoading: true,\r\n    errMess: null,\r\n    users:''\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_USER:\r\n            return {...state, isLoading: false, errMess: null, Users: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Shows = (state = \r\n    { isLoading: true,\r\n    errMess: null,\r\n    shows:[]\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.GET_PRODUCTS:\r\n            return {...state, isLoading: false, errMess: null, shows: action.payload};\r\n            case ActionTypes.PRODUCT_LOADING:\r\n            return {...state, isLoading: true, errMess: null, shows:[]}; \r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store =ConfigureStore();\n\nclass App extends Component {\n\n  componentWillMount(){\n    var loginPage =[];\n    // loginPage.push(<Loginscreen />);\n    // this.setState({\n    //               loginPage:loginPage\n    //                 })\n  }\n\n\n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n         <Login />\n        </header>\n      </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers,applyMiddleware} from 'redux';\r\nimport { Users } from './users';\r\nimport { Shows } from './shows';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            users: Users,\r\n            username:\"Maggie\",\r\n            shows: Shows\r\n          \r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}